const Cancellable=Java.type("org.bukkit.event.Cancellable");export const prefixes=["org.bukkit.event.block","org.bukkit.event.command","org.bukkit.event.enchantment","org.bukkit.event.entity","org.bukkit.event.hanging","org.bukkit.event.inventory","org.bukkit.event.player","org.bukkit.event.raid","org.bukkit.event.server","org.bukkit.event.vehicle","org.bukkit.event.weather","org.bukkit.event.world","org.spigotmc.event.entity","org.spigotmc.event.player"];try{Java.type("com.destroystokyo.paper.event.player.IllegalPacketEvent"),prefixes.push("com.destroystokyo.paper.event.block","com.destroystokyo.paper.event.entity","com.destroystokyo.paper.event.executor","com.destroystokyo.paper.event.player","com.destroystokyo.paper.event.profile","com.destroystokyo.paper.event.server")}catch(error){}export const accessors=(that,things)=>({getter:property=>(...args)=>{if("function"!=typeof args[0])return things.map(thing=>thing[property]);things.map(thing=>args[0](thing[property]))},runner:property=>(...args)=>(things.map(thing=>thing[property](...args)),that),modifier:consumer=>(...args)=>{const outputs=things.map(consumer);return"function"==typeof args[0]?(outputs.map(args[0]),that):outputs},appender:property=>(...args)=>void 0===args[0]?things.map(thing=>thing[property]):(things.map(thing=>{const value=thing[property];"function"==typeof args[0]?(args[0](value),thing[property]=value):thing[property]=Object.assign(value,args[0])}),that),setter:property=>(...args)=>void 0===args[0]?things.map(thing=>thing[property]):(things.map(thing=>{"function"==typeof args[0]?args[0](thing[property]):thing[property]=args[0]}),that),setterNest:property=>(...args)=>void 0===args[0]?things.map(thing=>thing[property]):void 0===args[1]?things.map(thing=>"function"==typeof args[0]?args[0](thing[property]):thing[property][args[0]]):(things.map(thing=>{"function"==typeof args[1]?args[1](thing[property][args[0]]):thing[property][args[0]]=args[1]}),that),lister:property=>(...args)=>void 0===args[0]?things.map(thing=>thing[property]):(things.map(thing=>{"function"==typeof args[0]?args[0](thing[property]):(thing[property].clear(),args.forEach(thing[property].add))}),that),listerNest:property=>(...args)=>void 0===args[0]?things.map(thing=>thing[property]):void 0===args[1]?things.map(thing=>"function"==typeof args[0]?args[0](thing[property]):thing[property][args[0]]):(things.map(thing=>{"function"==typeof args[1]?args[1](thing[property][args[0]]):(thing[property][args[0]].clear(),args.slice(1).forEach(thing[property][args[0]].add))}),that)});export const builder=(_,$)=>library=>{const chain=library.chain(_,$);return{wrapper:library.wrapper(_,$),parser:library.parser(_,$),chainer:(...things)=>{const that={},properties=accessors(that,things),scripts=_.object(_.entries(chain),entry=>"function"==typeof entry.value?{[entry.key]:properties.modifier(entry.value)}:{[entry.key]:properties[entry.value](entry.key)});return Object.assign(that,scripts)},links:_.keys(chain)}};export const command=(_,$)=>({on:name=>{let tab=()=>[],run=()=>{};const that={tab:handler=>(tab=handler,that),run:handler=>(run=handler,that)};return core.command({name:name,execute:(...args)=>run(...args),tabComplete:(player,...args)=>tab(player,args.length,...args)||[]}),that}});export const event=(_,$)=>({on:shortcut=>{let type=void 0;const suffix=`${_.pascal(shortcut)}Event`;if(prefixes.forEach(prefix=>{if(void 0===type)try{Java.type(`${prefix}.${suffix}`),type=`${prefix}.${suffix}`}catch(error){}}),void 0===type)throw"EventError: That event does not exist!";{const steps=[],that={if:condition=>(steps.push({type:"condition",item:condition}),that),do:listener=>(steps.push({type:"listener",item:listener}),that)};return core.event(type,event=>{if(event instanceof Java.type(type)){const storage={},cancellable=event instanceof Cancellable;let ready=!0;steps.forEach(step=>{switch(step.type){case"condition":switch(typeof step.item){case"boolean":cancellable&&step.item===event.isCancelled()&&(ready=!1);break;case"function":step.item(event,storage)||(ready=!1);break;case"object":_.match(_.access(event),step.item)||(ready=!1)}break;case"listener":if(ready)try{step.item(event,storage)}catch(error){throw ready=!1,error}}})}}),that}}});