export function wrapper(_,API){const util={attribute:{generic_max_health:[0,1024],generic_follow_range:[0,2048],generic_knockback_resistance:[0,1],generic_movement_speed:[0,1024],generic_attack_damage:[0,2048],generic_armor:[0,30],generic_armor_toughness:[0,20],generic_attack_knockback:[0,5],generic_attack_speed:[0,1024],generic_luck:[-1024,1024],horse_jump_strength:[0,2],generic_flying_speed:[0,1024],zombie_spawn_reinforcements:[0,1]},equipment:{chest:"chestplate",feet:"boots",hand:"itemInMainHand",head:"helmet",legs:"leggings",off_hand:"itemInOffHand"},passengers:instance=>_.mirror({get array(){return core.array(instance.passengers)},add:value=>{instance.addPassenger(value.instance||value)},delete:value=>{instance.removePassenger(value.instance||value)},clear:()=>{instance.eject()}}),tags:instance=>_.mirror({get array(){return instance.scoreboardTags},add:value=>{instance.scoreboardTags.add(value)},remove:value=>{instance.scoreboardTags.remove(value)},clear:()=>{instance.scoreboardTags.clear()}})};return instance=>{const entity={instance:instance,get attributes(){return _.define(API.attribute,entry=>{const attribute=instance.getAttribute(entry.value);if(attribute)return{get:()=>attribute.baseValue,set:value=>{attribute.baseValue=_.clamp(value||attribute.defaultValue,...util.attribute[entry.key])}}})},set attributes(value){_.keys(API.attribute).forEach(key=>{entity.attributes[key]=value[key]||entity.getAttribute(API.attribute[key]).defaultValue})},get effects(){return _.define(API.potionEffectType,entry=>({get:()=>{const effect=instance.getPotionEffect(entry.value);if(effect)return{amplifier:effect.amplifier,duration:effect.duration}},set:value=>{value.amplifier>0&&value.duration>0?instance.addPotionEffect(entry.value.createEffect(value.duration,value.amplifier),!0):instance.removePotionEffect(entry.value)}}))},set effects(value){_.keys(API.potionEffectType).forEach(key=>entity.effects[key]=value[key]||{})},get equipment(){return _.define(API.equipmentSlot,entry=>{const slot=util.equipment[entry.key];return{get:()=>instance.equipment[slot],set:value=>{instance.equipment[slot]=value}}})},set equipment(value){core.keys(API.equipmentSlot).forEach(key=>{instance.equipment[util.equipment[key]]=value[key]||null})},get health(){return instance.health},set health(value){instance.health=_.clamp(value,0,instance.maxHealth)},get lifeform(){return _.key(API.entityType,instance.type.instance)},set lifeform(value){instance.type=API.entityType[value]},get passengers(){return util.passengers(instance).get()},set passengers(value){util.passengers(instance).set(value)},get tags(){return util.tags(instance).get()},set tags(value){util.tags(instance).set(value)}};return entity}}export function chainer(_,API){return(...entities)=>{const that={attribute:(...args)=>void 0===args[0]?entities.map(entity=>entity.attributes):void 0===args[1]?entities.map(entity=>entity.attributes[args[0]]):(entities.map(entity=>entity.attributes[args[0]]=args[1]),that),effect:(...args)=>void 0===args[0]?entities.map(entity=>entity.effects):void 0===args[1]?entities.map(entity=>entity.effects[args[0]]):(entities.map(entity=>entity.effects[args[0]]={amplifier:args[1],duration:args[2]}),that),equipment:(...args)=>void 0===args[0]?entities.map(entity=>entity.equipment):void 0===args[1]?entities.map(entity=>entity.equipment[args[0]]):(entities.map(entity=>entity.equipment[args[0]]=args[1]),that),health:(...args)=>void 0===args[0]?entities.map(entity=>entity.health):(entities.map(entity=>entity.health=args[0]),that),lifeform:(...args)=>void 0===args[0]?entities.map(entity=>entity.lifeform):(entities.map(entity=>entity.lifeform=args[0]),that),passenger:(...args)=>void 0===args[0]?entities.map(entity=>entity.passengers):(entities.map(entity=>{"function"==typeof args[0]?args[0](entity.passengers):(entity.passengers.clear(),args.forEach(entity.passengers.add))}),that),tag:(...args)=>void 0===args[0]?entities.map(entity=>entity.tags):(entities.map(entity=>{"function"==typeof args[0]?args[0](entity.tags):(entity.tags.clear(),args.forEach(entity.tags.add))}),that)};return that}}export const links=["attribute","effect","equipment","health","lifeform","passenger","tag"];