if(core.support.legacy)throw"You must be running on spigot or paper to use JX!";import{_}from"./library/framework.min.js";import*as tools from"./library/tools.min.js";import*as block from"./library/block.min.js";import*as entity from"./library/entity.min.js";import*as item from"./library/item.min.js";import*as location from"./library/location.min.js";import*as vector from"./library/vector.min.js";const Block=Java.type("org.bukkit.block.Block"),Entity=Java.type("org.bukkit.entity.Entity"),Vector=Java.type("org.bukkit.util.Vector"),Location=Java.type("org.bukkit.Location"),ItemStack=Java.type("org.bukkit.inventory.ItemStack"),$=(object,...args)=>{if(!_.def(object))return null;switch(typeof object){case"string":const prefix=object[0],suffix=object.slice(1);switch(prefix){case"~":return $[suffix]||_.extend($,bridge(suffix,...args));case"!":return $(new ItemStack($("+").fronts("material")[suffix]).ensureServerConversions());case"@":return $([...server.selectEntities(args[0]||server.getConsoleSender(),object)]);case"#":return core.data(suffix,args[0]);case"?":const location=args[0]||self.getLocation();return $(location.getWorld().spawnEntity(location,$("+").fronts("entityType")[suffix]));case"*":return event.on(suffix);case"/":return command.on(suffix);case"+":return utility;default:return null}case"object":if(null===object)return null;const input=_.iterable(object)?object[0]:object;if("string"==typeof input.format){const library=jx[input.format];return library?_.iterable(object)?[...object].map($):library.parser(object):null}return input instanceof Block?receiver("block",object,jx):input instanceof Entity?receiver("entity",object,jx):input instanceof ItemStack?receiver("item",object,jx):input instanceof Location?receiver("location",object,jx):input instanceof Vector?receiver("vector",object,jx):null}},bridge=tools.bridge(_,$),builder=tools.builder(_,$),command=tools.command(_,$),event=tools.event(_,$),receiver=tools.receiver(_,$),utility=tools.utility(_,$);$("~org.bukkit.Sound"),$("~org.bukkit.GameMode"),$("~org.bukkit.Instrument"),$("~org.bukkit.boss.BarFlag"),$("~org.bukkit.boss.BarColor"),$("~org.bukkit.boss.BarStyle"),$("~org.bukkit.SoundCategory"),$("~org.bukkit.block.BlockFace"),$("~org.bukkit.inventory.ItemFlag"),$("~org.bukkit.inventory.EquipmentSlot"),$("~org.bukkit.enchantments.Enchantment"),$("~org.bukkit.attribute.AttributeModifier.Operation"),$("~org.bukkit.Material",value=>value.isLegacy()),$("~org.bukkit.entity.EntityType",value=>"UNKNOWN"===value.name()),$("~org.bukkit.attribute.Attribute",null,value=>value.getKey().getKey().split(".")[1]),$("~org.bukkit.potion.PotionEffectType",null,value=>value.getHandle().c().split(".")[2]);const jx={block:builder(block),entity:builder(entity),item:builder(item),location:builder(location),vector:builder(vector)};core.export($);