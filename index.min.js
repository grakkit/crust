const framework=core.import("grakkit/framework"),API=framework.object(framework.entries({entityType:{source:Java.type("org.bukkit.entity.EntityType"),consumer:value=>"UNKNOWN"===value.name()?void 0:value.key.key},potionEffectType:{source:Java.type("org.bukkit.potion.PotionEffectType"),consumer:value=>value.handle.c().split(".")[2]},equipmentSlot:{source:Java.type("org.bukkit.inventory.EquipmentSlot")},attribute:{source:Java.type("org.bukkit.attribute.Attribute")},amOperation:{source:Java.type("org.bukkit.attribute.AttributeModifier.Operation")},enchantment:{source:Java.type("org.bukkit.enchantments.Enchantment"),consumer:value=>value.key.key},material:{source:Java.type("org.bukkit.Material"),consumer:value=>value.legacy?void 0:value.key.key}}),entry=>({[entry.key]:framework.object([...entry.value.source.values()],value=>{const consumer=entry.value.consumer||(value=>value.name().toLowerCase());return{[consumer(core.access(value))]:value}})}));import*as item from"./library/item.min.js";import*as entity from"./library/entity.min.js";const wrappers={item:item.wrapper(framework,API),entity:entity.wrapper(framework,API)},chainers={item:item.chainer(framework,API),entity:entity.chainer(framework,API)},links={item:item.links,entity:entity.links},one=(type,instance)=>{const that=chainers[type](wrappers[type](instance));return framework.object(links[type],link=>({[link]:(...args)=>{const result=that[link](...args);return result===that?that:result[0]}}))},all=(type,...instances)=>{const that=chainers[type](wrappers[type](...instances));return framework.extend(that,{get first(){return one(type,instances[0])},get forEach(){return instances.map(instance=>one(type,instance)).forEach},get last(){return one(type,instances.slice(-1)[0])}})};export function $(object,...args){if(null!==object)switch(typeof object){case"string":const prefix=object[0],suffix=object.slice(1);switch(prefix){case"~":return null;case"!":return"!"===suffix[0]?one("item",$(suffix.slice(1))):new(Java.type("org.bukkit.inventory.ItemStack"))(type);case"@":const context=args[0]||server.consoleSender;return all("entity",...core.array(server.selectEntities(context.instance||context,object)));case"#":return core.data(suffix,args[0]);case"%":case"^":return null;case"*":return core.event(suffix,args[0]);case"-":case"+":case"/":return null;case"?":return"?"===suffix[0]?one("entity",$(suffix.slice(1))):args[0].world.spawnEntity(args[0],API.entityType[suffix]);default:return $(`~${suffix}`)}case"object":const instance=object.instance||object;if(instance instanceof Java.type("org.bukkit.block.Block"));else{if(instance instanceof Java.type("org.bukkit.entity.Entity"))return one("entity",core.access(instance));if(instance instanceof Java.type("org.bukkit.inventory.ItemStack"))return one("item",core.access(instance));instance instanceof Java.type("org.bukkit.inventory.Inventory")||instance instanceof Java.type("org.bukkit.Location")||Java.type("org.bukkit.World")}}}core.export(Object.assign($,{wrappers:wrappers,chainers:chainers,API:API}));